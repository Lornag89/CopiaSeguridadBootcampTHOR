console.log('**********Ejercicio 4 **********')

/*Crea una funci√≥n que recibe como par√°metro una fruta como string y devuelve la
posicion del array donde est√© esa fruta.
Si no encuentra el elemento que devuelva -1 ;
Guarda el valor que retorna la funci√≥n y imprimela en la consola
*/

const frutas = ['Pl√°tanos', 'Bananas', 'Pi√±as', 'Manzanas', 'Peras',
    'Uvas', 'Pomelos'];

const myIndexOf = (value, array) => {
    //Variables Auxiliares
    let position = -1

    //c√≥digo/l√≥gica que usa y modifica las variables auxiliares
    for (let i = 0; i < array.length && position === -1; i++) {
        if (value === array[i]) {
            position = i
        }
    }

    //lectura de datos y retorno de lo que sea
    return position
}

//la siguiente version es menos explicativa, pero igualmente funciona
const myIndeceOf = (value, array) => {
    for (let i = 0; i < array.length; i++) {
        if (value === array[i]) return i
    }
    return -1
}

console.log(myIndexOf('Pi√±as', frutas))//2
console.log(myIndexOf(2, [4, 7, 5, 2]))//3
console.log(myIndexOf('chirimoyas', frutas))//-1
console.log(myIndexOf('üçí', ['üçé', 'üçê', 'üçå', 'üçá', 'üçí']))//4


console.log('**********Ejercicio 5 **********')

/*Crea una funci√≥n que reciba el array de frutas y devuelva un string con todas las
frutas separadas por comas.
¬°No utilizar el m√©todo join()
¬°¬°¬°No tiene que haber una coma al final del string!!!
*/
const frutas5 = ['Pl√°tanos', 'Bananas', 'Pi√±as', 'Manzanas', 'Peras',
    'Uvas', 'Pomelos'];

const noComillas = (frutas5) => {

}




console.log('**********Ejercicio 6 **********')

/*Crea una funci√≥n que reciba el array de frutas y que te devuelva un nuevo array al
rev√©s.
No utilizar el m√©todo reverse*/

const frutas6 = ['Pl√°tanos', 'Bananas', 'Pi√±as', 'Manzanas', 'Peras',
    'Uvas', 'Pomelos'];

const myReverse = (array) => {
    const arrayReverse = []

    for (let value of array) {
        arrayReverse.unshift(value)
    }
    return arrayReverse
}

const myOtherReverse = (array) => {
    const arrayReverse = []

    for (let i = array.length - 1; i >= 0; i--) { //Recorrer array del √∫ltimo al primero
        arrayReverse.push(array[i])
    }
    return arrayReverse
}

console.log(myReverse(frutas6))
console.log(myOtherReverse(frutas6))



console.log('**********Ejercicio 7**********')

/*
Crear una calculadora:
Crea un bucle en el que el programa pregunta diferentes opciones (como si
fuera un men√∫).
Las opciones ser√°n (s) sumar, (r) restar, (m) multiplicar, (d) dividir, (e)
exponencial, (p) porcentaje y (x) salir.
La calculadora seguir√° ejecut√°ndose hasta que el usuario aprete la letra x que
ser√° salir.
Para cada letra entre las opciones, crear la funci√≥n que se encargar√° de hacer
cada operaci√≥n.
Dentro de cada funci√≥n, pediremos al usuario los datos necesarios para relizar
esa operaci√≥n.
Que se imprima por consola el resultado de cada operaci√≥n.
No hace falta que las funciones devuelvan nada, solo que impriman por consola.
Refactoriza para que haya el menor n√∫mero de cosas repetidas.
*/

const sumar = (pNum1, pNum2) => {
    console.log(`${pNum1} + ${pNum2} = ${pNum1 + pNum2}`)
}

const restar = (pNum1, pNum2) => {
    console.log(`${pNum1} - ${pNum2} = ${pNum1 - pNum2}`)
}

const multiplicar = (pNum1, pNum2) => {
    console.log(`${pNum1} * ${pNum2} = ${pNum1 * pNum2}`)
}

const dividir = (pNum1, pNum2) => {
    console.log(`${pNum1} / ${pNum2} = ${pNum1 / pNum2}`)
}

const exponencial = (pBase, pExponente) => {
    console.log(`${pBase} elevado a ${pExponente} = ${pBase ** pExponente}`)
}

const porcentaje = (pBruto, pTantoPorCiento) => {
    console.log(`${pBruto}  ${pTantoPorCiento} = ${pBruto ** pTantoPorCiento}`)
}



const pedirNumero = (mensaje) => {
    let num
    do {
        num = +prompt(mensaje)
    } while (num === null || isNaN(num) || num === '') //.trim quita espacios delante y detr√°s, esto aclara que si pasa un string vacio siga pidiendo numero

    num = +num
    return num
}


let respuesta

do {

    respuesta = prompt(`¬°Bienvenidos a mi calculadora!, ¬øQu√© quieres hacer?

(s) SUMAR
(r) RESTAR  
(m) MULTIPLICAR
(d) DIVIDIR
(e) EXPONENCIAL
(p) Porcentaje
(x) SALIR`)

    if (respuesta === 's') {

        //pedimos 2 n√∫meros al usuario
        const num1 = pedirNumero('Dame el primer n√∫mero')
        const num2 = pedirNumero('Dame el segundo n√∫mero')

        //Sumamos e imprimimos por pantalla
        sumar(num1, num2)

    } else if (respuesta === 'r') {

        //Pedir 2 n√∫meros
        const num1 = pedirNumero('Dame el primer n√∫mero')
        const num2 = pedirNumero('Dame el segundo n√∫mero')

        //restar e imprimir resultado
        restar(num1, num2)

    } else if (respuesta === 'm') {

        //Pedir 2 n√∫meros
        const num1 = pedirNumero('Dame el primer n√∫mero')
        const num2 = pedirNumero('Dame el segundo n√∫mero')

        //multiplicar e imprimir resultado
        multiplicar(num1, num2)

    } else if (respuesta === 'd') {

        //Pedir 2 n√∫meros
        const num1 = pedirNumero('Dame el primer n√∫mero')
        const num2 = pedirNumero('Dame el segundo n√∫mero')

        //dividir e imprimir resultado
        dividir(num1, num2)

    } else if (respuesta === 'e') {

        //Pedir 2 n√∫meros
        const base = pedirNumero('Dame la base')
        const exponente = pedirNumero('Dame el exponente')

        //potencia e imprimir resultado
        exponencial(base, exponente)

    } else if (respuesta === 'p') {

        //Pedir 2 n√∫meros
        const bruto = pedirNumero('Dame la base')
        const tantoPorCiento = pedirNumero('Dame el exponente')

        //porcentaje e imprimir resultado
        porcentaje(bruto, tantoPorCiento)
    }
    // else if ( respuesta === null || ||  ||  )

} while ( respuesta !== 'x') {

    console.log ('¬°Adi√≥s! üëãüèΩ')
}
